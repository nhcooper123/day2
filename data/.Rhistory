library(tidyverse)
compensation <- read.csv("compensation.csv")
MrPedantic <-
compensation %>%
mutate(FR = Fruit/Root) %>%
group_by(Grazing) %>%
summarise(med = median(FR),
varF = var(FR),
ssF = n(),
ssF2 = length(FR))
MrPedantic <-
compensation %>%
mutate(FR = Fruit/Root) %>%
group_by(Grazing) %>%
summarise(med = median(FR),
varF = var(FR),
ssF = n(),
ssF2 = length(FR))
MrPedantic
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_classic()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_bw()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_excel()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_economist()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_economist()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_bw()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_bw() +
ylim(0,150) +
xlim(0,15)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point() +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = "red") +
theme_bw() +
ylim(0,150)
colors()
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = "deeppink") +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = "#dbe06e") +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = rainbow(8)) +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = rainbow(1)) +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = rainbow(1:9)) +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit)) +
geom_point(colour = "papayawhip") +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150)
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing)) +
geom_point(shape = 1) +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing)) +
geom_point(shape = 3) +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5))
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5)) +
title("hello")
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5)) +
ggtitle("hello")
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw() +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5)) +
ggtitle("hello") +
theme(legend.position = "none")
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw(base_size = 14) +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5)) +
ggtitle("hello") +
theme(legend.position = "none")+
theme()
ggplot(compensation, aes(x = Root, y = Fruit, colour = Grazing, shape = Grazing)) +
geom_point() +
theme_bw(base_size = 14) +
ylim(0,150) +
scale_color_manual(values = c("deeppink", "tomato"))+
scale_shape_manual(values = c(4,5)) +
ggtitle("hello") +
theme(legend.position = "none")+
xlab("hello") +
ylab("yo")
ggplot(compensation, aes(x = Fruit)) +
geom_histogram(color = "red", alpha = 0.5) +
facet_wrap(~Grazing, ncol = 1)
ggplot(compensation, aes(x = Fruit)) +
geom_histogram(bins = 20, color = "red", alpha = 0.5) +
facet_wrap(~Grazing, ncol = 1)
ggplot(compensation, aes(x = Fruit)) +
geom_histogram(bins = 20, fill = "red", alpha = 0.5) +
facet_wrap(~Grazing, ncol = 1)
ggplot(compensation, aes(x = Fruit, fill = Grazing)) +
geom_histogram(bins = 20, alpha = 0.5) +
facet_wrap(~Grazing, ncol = 1)
ggplot(compensation, aes(x = Fruit, fill = Grazing)) +
geom_histogram(bins = 20, alpha = 0.5) +
facet_wrap(~Grazing, ncol = 1) +
scale_fill_manual(values = c("red", "blue"))
ggplot(compensation, aes(x = Grazing, y = Fruit, fill = Grazing)) +
geom_boxplot(width = 0.1, alpha = 0.5) +
scale_fill_manual(values = c("red", "blue"))
?geom_boxplot
ggplot(compensation, aes(x = Grazing, y = Fruit, fill = Grazing)) +
geom_violin(alpha = 0.5) +
scale_fill_manual(values = c("red", "blue"))
tt <- read.csv("GardenOzone.csv")
t.test(Ozone ~ Garden.location, data = tt)
gr <- read.csv("plant.growth.rate.csv")
model1 <- lm(plant.growth.rate ~ soil.moisture. content, data = gr)
ggplot(gr, aes(x = soil.moisture.content, y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw()
library(tidyverse)
ggplot(gr, aes(x = soil.moisture.content, y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw()
ggplot(gr, aes(x = soil.moisture.content,
y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw() +
geom_smooth(method = 'lm')
ggplot(gr, aes(x = soil.moisture.content,
y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw() +
geom_smooth(method = lm)
newX <- expand.grid(soil.moisture.content =
seq(from = 0, to = 2, length = 50))
View(newX)
View(newX)
newX <- expand.grid(soil.moisture.content =
seq(from = 0, to = 2, length = 50))
newY <- predict(model1, newdata = newX, interval = "confidence")
model1 <- lm(plant.growth.rate ~ soil.moisture. content, data = gr)
model1 <- lm(plant.growth.rate ~ soil.moisture.content, data = gr)
newY <- predict(model1, newdata = newX, interval = "confidence")
View(newY)
View(newY)
linedata <- data.frame(newX, newY)
View(linedata)
View(linedata)
linedata <- linedata %>%
rename(plant.growth.rate = fit)
ggplot(gr, aes(x = soil.moisture.content,
y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw() +
geom_smooth(data = linedata, aes(ymin = lwr, ymax = upr))
ggplot(gr, aes(x = soil.moisture.content,
y = plant.growth.rate)) +
geom_point(col = "cornflowerblue", alpha = 0.5) +
theme_bw() +
geom_smooth(data = linedata, aes(ymin = lwr, ymax = upr),
stat = "identity")
newX <- expand.grid(DENSITY = seq(5, 50, 5),
SEASON = c("spring", "summer"))
newX
newX <- expand.grid(DENSITY = seq(5, 50, 50),
SEASON = c("spring", "summer"))
limpet <- read.csv("limpet.csv")
model <- lm(EGGS ~ DENSITY*SEASON, data = limpet)
newY <- predict(model, newdata = newX, interval = "confidence")
linedata2 <- data.frame(newX, newY)
linedata2 <-
linedata2 %>%
rename(EGGS = fit)
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON, group = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity")
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity")
newX <- expand.grid(DENSITY = seq(5, 50, 50),
SEASON = c("spring", "summer"))
newY <- predict(model, newdata = newX, interval = "confidence")
linedata2 <- data.frame(newX, newY)
linedata2 <-
linedata2 %>%
rename(EGGS = fit)
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity")
linedata2
newX <- expand.grid(DENSITY = seq(from = 5, to = 50, length = 50),
SEASON = c("spring", "summer"))
newY <- predict(model, newdata = newX, interval = "confidence")
linedata2 <- data.frame(newX, newY)
linedata2 <-
linedata2 %>%
rename(EGGS = fit)
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity")
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON, fill = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity")
ggplot(limpet, aes(x = DENSITY, y = EGGS, color = SEASON, fill = SEASON)) +
geom_point() +
theme_bw() +
geom_smooth(data = linedata2, aes(ymin = lwr, ymax = upr),
stat = "identity") +
scale_fill_manual(values = c("springgreen", "purple"))
lb <- read.csv("ladybirds.csv")
lb <- summarise(group_by(dd, Habitat, colour),
obs = sum(number))
dd <- read.csv("ladybirds.csv")
lb <- summarise(group_by(dd, Habitat, colour),
obs = sum(number))
lb
lb <- dd %>%
group_by(Habitat, colour) %>%
summarise(obs = sum(number))
lb_matrix <- xtabs(obs ~ Habitat + colour, data = lb)
chisq.test(lb_matrix)
